#!/bin/bash -
#===============================================================================
#
#          FILE: dnscrypt.sh
# 
#         USAGE: ./dnscrypt.sh 
# 
#   DESCRIPTION: Starts and stops dnscrypt-proxy
# 
#       OPTIONS: start : start the demon
#                stop : stop the daemon
#                status : check if daemon running
#  REQUIREMENTS: dnscrypt-proxy and MacOS
#        AUTHOR: Bend
#       CREATED: 02/07/2012 11:57:27 CET
#===============================================================================

set -o nounset                              # Treat unset variables as an error

function is_int() { return $(test "$@" -eq "$@" > /dev/null 2>&1); } 

if [ $1 == "start" ]; then
    # Get process id  if running
    id=$(ps ax | grep dnscrypt-proxy | grep -v grep | awk {'print $1'})
    # If not runnning
    if [ -z "$id" ]; then
        # First Launch dnscrypt-proxy
        dnscrypt-proxy --daemonize
    else
        # dnscrypt already running
        echo "dnscrypt-proxy is already running"
        exit
    fi
    # Then change dns servers
    networksetup -setdnsservers "Wi-Fi" 127.0.0.1
    networksetup -setdnsservers "Ethernet" 127.0.0.1
    echo "dnscrypt-proxy is now running in background"

elif [ $1 == "stop" ]; then
    # Search process id
    id=$(ps ax | grep dnscrypt-proxy | grep -v grep | awk {'print $1'})
    if [ -z "$id" ]; then
        echo "dnscrypt-proxy not running"
    else
        # Stop process
        kill $id
        # Read old dns
        networksetup -setdnsservers "Wi-Fi" "Empty"
        networksetup -setdnsservers "Ethernet" "Empty"
        echo "dnscrypt-proxy has been stopped"
    fi

elif [ $1 == "status" ]; then
    id=$(ps ax | grep dnscrypt-proxy | grep -v grep | awk {'print $1'})
    if [ -z "$id" ]; then
        echo "dnscrypt-proxy is not running"
    else 
        echo "dnscrypt-proxy is running"
    fi
fi







